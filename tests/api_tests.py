#!/usr/bin/env python

import requests  # type: ignore

API_BASE = "http://82.148.225.92:8022/"


def test_drug_based_validation():
    permutations = 10_000
    only_approved_drugs = True
    true_drugs = [
        "DB00013",
        "DB00013",
        "DB00086",
        "DB00086",
        "DB00569",
        "DB00682",
        "DB00682",
        "DB01109",
        "DB01109",
        "DB01418",
        "DB01418",
        "DB06228",
        "DB06228",
        "DB06605",
        "DB06605",
        "DB06695",
        "DB06695",
        "DB06695",
        "DB08813",
        "DB08813",
        "DB09075",
        "DB09255",
        "DB09255",
        "DB09255",
        "DB13327",
    ]
    test_drugs = [
        ["drugbank.DB00001", 75],
        ["drugbank.DB00006", 75],
        ["drugbank.DB00009", 34],
        ["drugbank.DB00013", 11],
        ["drugbank.DB00015", 34],
        ["drugbank.DB00025", 59],
        ["drugbank.DB00029", 34],
        ["drugbank.DB00031", 26],
        ["drugbank.DB00036", 49],
        ["drugbank.DB00055", 1],
        ["drugbank.DB00086", 72],
        ["drugbank.DB00100", 15],
        ["drugbank.DB00115", 51],
        ["drugbank.DB00170", 9],
        ["drugbank.DB00173", 32],
        ["drugbank.DB00188", 58],
        ["drugbank.DB00278", 40],
        ["drugbank.DB00302", 76],
        ["drugbank.DB00352", 29],
        ["drugbank.DB00364", 39],
        ["drugbank.DB00398", 38],
        ["drugbank.DB00437", 36],
        ["drugbank.DB00464", 19],
        ["drugbank.DB00498", 74],
        ["drugbank.DB00513", 52],
        ["drugbank.DB00530", 42],
        ["drugbank.DB00569", 65],
        ["drugbank.DB00583", 28],
        ["drugbank.DB00594", 56],
        ["drugbank.DB00917", 57],
        ["drugbank.DB01050", 14],
        ["drugbank.DB01088", 46],
        ["drugbank.DB01109", 23],
        ["drugbank.DB01123", 75],
        ["drugbank.DB01197", 66],
        ["drugbank.DB01213", 73],
        ["drugbank.DB01225", 65],
        ["drugbank.DB01268", 20],
        ["drugbank.DB01593", 2],
        ["drugbank.DB01698", 30],
        ["drugbank.DB01839", 48],
        ["drugbank.DB03147", 25],
        ["drugbank.DB04854", 35],
        ["drugbank.DB04898", 6],
        ["drugbank.DB05099", 70],
        ["drugbank.DB05294", 37],
        ["drugbank.DB05311", 41],
        ["drugbank.DB05521", 67],
        ["drugbank.DB05777", 61],
        ["drugbank.DB06228", 64],
        ["drugbank.DB06404", 7],
        ["drugbank.DB06589", 44],
        ["drugbank.DB06595", 31],
        ["drugbank.DB06605", 54],
        ["drugbank.DB06616", 24],
        ["drugbank.DB06626", 47],
        ["drugbank.DB06692", 18],
        ["drugbank.DB06695", 8],
        ["drugbank.DB08865", 33],
        ["drugbank.DB08888", 43],
        ["drugbank.DB09075", 71],
        ["drugbank.DB09079", 21],
        ["drugbank.DB09109", 53],
        ["drugbank.DB09130", 5],
        ["drugbank.DB09131", 50],
        ["drugbank.DB09141", 65],
        ["drugbank.DB09213", 12],
        ["drugbank.DB09228", 7],
        ["drugbank.DB09258", 60],
        ["drugbank.DB09310", 16],
        ["drugbank.DB09332", 10],
        ["drugbank.DB11095", 75],
        ["drugbank.DB11166", 54],
        ["drugbank.DB11300", 3],
        ["drugbank.DB11311", 22],
        ["drugbank.DB11571", 4],
        ["drugbank.DB11572", 4],
        ["drugbank.DB11828", 45],
        ["drugbank.DB12010", 17],
        ["drugbank.DB12364", 69],
        ["drugbank.DB12789", 62],
        ["drugbank.DB13149", 27],
        ["drugbank.DB13150", 63],
        ["drugbank.DB13151", 13],
        ["drugbank.DB13152", 15],
        ["drugbank.DB13192", 68],
        ["drugbank.DB13884", 71],
        ["drugbank.DB13923", 68],
        ["drugbank.DB13933", 55],
        ["drugbank.DB13998", 59],
        ["drugbank.DB13999", 59],
        ["drugbank.DB14487", 2],
        ["drugbank.DB14533", 2],
        ["drugbank.DB14597", 41],
        ["drugbank.DB14738", 53],
    ]

    payload = {
        "true_drugs": true_drugs,
        "test_drugs": test_drugs,
        "permutations": permutations,
        "only_approved_drugs": only_approved_drugs,
    }
    url = f"{API_BASE}validation/drug"
    resp = requests.post(url, json=payload)
    print(resp.status_code, resp.text)


def test_module_based_validation():
    true_drugs = [
        "drugbank.DB00014",
        "drugbank.DB00115",
        "drugbank.DB00118",
        "drugbank.DB00158",
        "drugbank.DB00176",
        "drugbank.DB00206",
        "drugbank.DB00328",
        "drugbank.DB00363",
        "drugbank.DB00382",
        "drugbank.DB00393",
        "drugbank.DB00408",
        "drugbank.DB00472",
        "drugbank.DB00495",
        "drugbank.DB00502",
        "drugbank.DB00649",
        "drugbank.DB00656",
        "drugbank.DB00674",
        "drugbank.DB00679",
        "drugbank.DB00681",
        "drugbank.DB00683",
        "drugbank.DB00715",
        "drugbank.DB00734",
        "drugbank.DB00746",
        "drugbank.DB00806",
        "drugbank.DB00834",
        "drugbank.DB00850",
        "drugbank.DB00877",
        "drugbank.DB00915",
        "drugbank.DB00934",
        "drugbank.DB00960",
        "drugbank.DB00975",
        "drugbank.DB00981",
        "drugbank.DB01017",
        "drugbank.DB01043",
        "drugbank.DB01049",
        "drugbank.DB01050",
        "drugbank.DB01065",
        "drugbank.DB01136",
        "drugbank.DB01183",
        "drugbank.DB01212",
        "drugbank.DB01356",
        "drugbank.DB01618",
        "drugbank.DB02659",
        "drugbank.DB03128",
        "drugbank.DB04115",
        "drugbank.DB04815",
        "drugbank.DB04864",
        "drugbank.DB06750",
        "drugbank.DB09061",
        "drugbank.DB11094",
        "drugbank.DB11273",
        "drugbank.DB11473",
        "drugbank.DB11672",
        "drugbank.DB12052",
        "drugbank.DB12110",
        "drugbank.DB12131",
        "drugbank.DB13588",
    ]
    module_member_type = "gene"
    module_members = [
        "entrez.10006",
        "entrez.10013",
        "entrez.10188",
        "entrez.102",
        "entrez.1020",
        "entrez.10273",
        "entrez.10278",
        "entrez.10347",
        "entrez.10399",
        "entrez.10451",
        "entrez.10452",
        "entrez.10580",
        "entrez.10603",
        "entrez.10657",
        "entrez.10750",
        "entrez.10818",
        "entrez.10857",
        "entrez.10858",
        "entrez.10971",
        "entrez.11140",
        "entrez.11184",
        "entrez.1139",
        "entrez.1141",
        "entrez.1147",
        "entrez.117157",
        "entrez.1191",
        "entrez.1200",
        "entrez.1378",
        "entrez.1392",
        "entrez.1398",
        "entrez.1399",
        "entrez.140545",
        "entrez.1436",
        "entrez.1439",
        "entrez.1441",
        "entrez.1445",
        "entrez.1471",
        "entrez.1499",
        "entrez.1558",
        "entrez.1565",
        "entrez.1636",
        "entrez.1718",
        "entrez.1796",
        "entrez.1808",
        "entrez.1956",
        "entrez.1965",
        "entrez.1969",
        "entrez.2",
        "entrez.2023",
        "entrez.203068",
        "entrez.2041",
        "entrez.2057",
        "entrez.2064",
        "entrez.2065",
        "entrez.2066",
        "entrez.207",
        "entrez.2099",
        "entrez.2147",
        "entrez.2185",
        "entrez.2206",
        "entrez.2213",
        "entrez.2241",
        "entrez.2242",
        "entrez.2260",
        "entrez.2268",
        "entrez.22983",
        "entrez.2321",
        "entrez.2322",
        "entrez.23237",
        "entrez.23385",
        "entrez.23607",
        "entrez.23621",
        "entrez.238",
        "entrez.25",
        "entrez.2533",
        "entrez.2534",
        "entrez.2549",
        "entrez.2597",
        "entrez.25970",
        "entrez.26228",
        "entrez.26330",
        "entrez.267",
        "entrez.2690",
        "entrez.27",
        "entrez.27040",
        "entrez.27328",
        "entrez.274",
        "entrez.2885",
        "entrez.2887",
        "entrez.2932",
        "entrez.29760",
        "entrez.30011",
        "entrez.3055",
        "entrez.3077",
        "entrez.30818",
        "entrez.3127",
        "entrez.3162",
        "entrez.3303",
        "entrez.3308",
        "entrez.3309",
        "entrez.3310",
        "entrez.3312",
        "entrez.3313",
        "entrez.3315",
        "entrez.3320",
        "entrez.3326",
        "entrez.341",
        "entrez.3416",
        "entrez.3479",
        "entrez.348",
        "entrez.3480",
        "entrez.3481",
        "entrez.3482",
        "entrez.351",
        "entrez.3551",
        "entrez.3553",
        "entrez.356",
        "entrez.3560",
        "entrez.3572",
        "entrez.3575",
        "entrez.3630",
        "entrez.3635",
        "entrez.3636",
        "entrez.3643",
        "entrez.3667",
        "entrez.367",
        "entrez.3702",
        "entrez.3716",
        "entrez.3717",
        "entrez.3718",
        "entrez.3791",
        "entrez.3815",
        "entrez.3932",
        "entrez.3937",
        "entrez.3952",
        "entrez.399694",
        "entrez.4067",
        "entrez.4068",
        "entrez.408",
        "entrez.4129",
        "entrez.4137",
        "entrez.4145",
        "entrez.4233",
        "entrez.4296",
        "entrez.43",
        "entrez.4353",
        "entrez.4486",
        "entrez.4524",
        "entrez.4690",
        "entrez.4734",
        "entrez.4846",
        "entrez.4852",
        "entrez.4914",
        "entrez.4915",
        "entrez.498",
        "entrez.5058",
        "entrez.5062",
        "entrez.50807",
        "entrez.51225",
        "entrez.51338",
        "entrez.5156",
        "entrez.5159",
        "entrez.5170",
        "entrez.51741",
        "entrez.5290",
        "entrez.5291",
        "entrez.5295",
        "entrez.5296",
        "entrez.5315",
        "entrez.5328",
        "entrez.5335",
        "entrez.53358",
        "entrez.5336",
        "entrez.54209",
        "entrez.5468",
        "entrez.55620",
        "entrez.55676",
        "entrez.5578",
        "entrez.558",
        "entrez.5580",
        "entrez.5581",
        "entrez.55824",
        "entrez.5588",
        "entrez.5590",
        "entrez.5594",
        "entrez.5595",
        "entrez.5599",
        "entrez.5604",
        "entrez.5649",
        "entrez.5663",
        "entrez.5664",
        "entrez.5697",
        "entrez.57091",
        "entrez.5747",
        "entrez.5753",
        "entrez.5777",
        "entrez.5781",
        "entrez.5782",
        "entrez.5787",
        "entrez.5788",
        "entrez.5793",
        "entrez.5795",
        "entrez.5800",
        "entrez.581",
        "entrez.5819",
        "entrez.5829",
        "entrez.5879",
        "entrez.5894",
        "entrez.590",
        "entrez.5921",
        "entrez.596",
        "entrez.5979",
        "entrez.60",
        "entrez.613",
        "entrez.6198",
        "entrez.627",
        "entrez.640",
        "entrez.6452",
        "entrez.6461",
        "entrez.6464",
        "entrez.6503",
        "entrez.6517",
        "entrez.660",
        "entrez.6622",
        "entrez.6648",
        "entrez.6653",
        "entrez.6654",
        "entrez.6655",
        "entrez.6714",
        "entrez.673",
        "entrez.6772",
        "entrez.6774",
        "entrez.6776",
        "entrez.6777",
        "entrez.6850",
        "entrez.695",
        "entrez.7001",
        "entrez.7006",
        "entrez.7010",
        "entrez.7018",
        "entrez.7019",
        "entrez.7124",
        "entrez.7132",
        "entrez.7167",
        "entrez.7189",
        "entrez.7294",
        "entrez.7297",
        "entrez.7409",
        "entrez.7410",
        "entrez.7422",
        "entrez.7430",
        "entrez.7447",
        "entrez.7454",
        "entrez.7525",
        "entrez.7531",
        "entrez.7534",
        "entrez.7535",
        "entrez.7782",
        "entrez.780",
        "entrez.790",
        "entrez.79705",
        "entrez.801",
        "entrez.8301",
        "entrez.83464",
        "entrez.836",
        "entrez.841",
        "entrez.8440",
        "entrez.84959",
        "entrez.8503",
        "entrez.857",
        "entrez.8633",
        "entrez.8651",
        "entrez.8660",
        "entrez.867",
        "entrez.868",
        "entrez.8835",
        "entrez.8853",
        "entrez.9021",
        "entrez.9046",
        "entrez.9047",
        "entrez.930",
        "entrez.933",
        "entrez.9402",
        "entrez.945",
        "entrez.9510",
        "entrez.9564",
        "entrez.9743",
        "entrez.9846",
        "entrez.999",
    ]
    only_approved_drugs = True
    permutations = 1_000

    payload = {
        "module_members": module_members,
        "module_member_type": module_member_type,
        "permutations": permutations,
        "true_drugs": true_drugs,
        "only_approved_drugs": only_approved_drugs,
    }
    url = f"{API_BASE}validation/module"
    resp = requests.post(url, json=payload)
    print(resp.status_code, resp.text)


def test_join_validation():
    test_drugs = [
        "drugbank.DB00025",
        "drugbank.DB00031",
        "drugbank.DB00072",
        "drugbank.DB00201",
        "drugbank.DB00257",
        "drugbank.DB00342",
        "drugbank.DB00398",
        "drugbank.DB00477",
        "drugbank.DB00530",
        "drugbank.DB00619",
        "drugbank.DB00623",
        "drugbank.DB00637",
        "drugbank.DB00675",
        "drugbank.DB00756",
        "drugbank.DB00882",
        "drugbank.DB00997",
        "drugbank.DB01110",
        "drugbank.DB01118",
        "drugbank.DB01127",
        "drugbank.DB01204",
        "drugbank.DB01229",
        "drugbank.DB01254",
        "drugbank.DB01259",
        "drugbank.DB01268",
        "drugbank.DB02709",
        "drugbank.DB04813",
        "drugbank.DB04868",
        "drugbank.DB05294",
        "drugbank.DB06595",
        "drugbank.DB06616",
        "drugbank.DB06803",
        "drugbank.DB08865",
        "drugbank.DB08916",
        "drugbank.DB09053",
        "drugbank.DB09054",
        "drugbank.DB09079",
        "drugbank.DB09130",
        "drugbank.DB11093",
        "drugbank.DB11125",
        "drugbank.DB11348",
        "drugbank.DB11742",
        "drugbank.DB11828",
        "drugbank.DB12010",
        "drugbank.DB12015",
        "drugbank.DB12267",
        "drugbank.DB12483",
        "drugbank.DB13998",
        "drugbank.DB13999",
        "drugbank.DB14481",
    ]
    true_drugs = [
        "drugbank.DB00122",
        "drugbank.DB00134",
        "drugbank.DB00136",
        "drugbank.DB00158",
        "drugbank.DB00182",
        "drugbank.DB00197",
        "drugbank.DB00255",
        "drugbank.DB00313",
        "drugbank.DB00316",
        "drugbank.DB00396",
        "drugbank.DB00412",
        "drugbank.DB00435",
        "drugbank.DB00515",
        "drugbank.DB00531",
        "drugbank.DB00550",
        "drugbank.DB00563",
        "drugbank.DB00564",
        "drugbank.DB00602",
        "drugbank.DB00624",
        "drugbank.DB00636",
        "drugbank.DB00675",
        "drugbank.DB00755",
        "drugbank.DB00783",
        "drugbank.DB00853",
        "drugbank.DB00898",
        "drugbank.DB00907",
        "drugbank.DB00997",
        "drugbank.DB01169",
        "drugbank.DB01174",
        "drugbank.DB01229",
        "drugbank.DB01234",
        "drugbank.DB01262",
        "drugbank.DB01645",
        "drugbank.DB03733",
        "drugbank.DB03843",
        "drugbank.DB04216",
        "drugbank.DB04539",
        "drugbank.DB05076",
        "drugbank.DB06732",
        "drugbank.DB06767",
        "drugbank.DB09325",
        "drugbank.DB09526",
        "drugbank.DB09536",
        "drugbank.DB11091",
        "drugbank.DB11132",
        "drugbank.DB11841",
        "drugbank.DB12116",
        "drugbank.DB14085",
    ]
    module_member_type = "gene"
    module_members = [
        "entrez.1499",
        "entrez.2047",
        "entrez.2064",
        "entrez.207",
        "entrez.29789",
        "entrez.3320",
        "entrez.4690",
        "entrez.4978",
        "entrez.5071",
        "entrez.5290",
        "entrez.6310",
        "entrez.821",
        "entrez.867",
        "entrez.999",
    ]
    permutations = 1_000
    only_approved_drugs = True

    payload = {
        "module_member_type": module_member_type,
        "module_members": module_members,
        "permutations": permutations,
        "only_approved_drugs": only_approved_drugs,
        "true_drugs": true_drugs,
        "test_drugs": test_drugs,
    }
    url = f"{API_BASE}validation/joint"
    resp = requests.post(url, json=payload)
    print(resp.status_code, resp.text)


def test_closeness():
    seeds = [
        "A1A4Y4",
        "O00571",
        "O14965",
        "O43683",
        "O43707",
        "O60674",
        "O75051",
        "O75179",
        "O95150",
        "O95256",
        "O95996",
        "O95999",
        "P00533",
        "P01023",
        "P01137",
        "P01375",
        "P04150",
        "P04626",
        "P04629",
        "P04792",
    ]

    only_approved_drugs = True
    only_direct_drugs = True
    n = 50

    payload = {
        "seeds": seeds,
        "only_approved_drugs": only_approved_drugs,
        "only_direct_drugs": only_direct_drugs,
        "N": n,
    }
    url = f"{API_BASE}closeness/submit"

    resp = requests.post(url, json=payload)
    print(resp.status_code, resp.text)


if __name__ == "__main__":
    test_drug_based_validation()
    test_module_based_validation()
    test_join_validation()
    test_closeness()
